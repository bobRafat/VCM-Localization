<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddOptionalQuestion" xml:space="preserve">
    <value>Add an Optional Question</value>
  </data>
  <data name="AddQuestion" xml:space="preserve">
    <value>Add Question</value>
  </data>
  <data name="AnswerOption" xml:space="preserve">
    <value>Answer Option</value>
  </data>
  <data name="AnswerType" xml:space="preserve">
    <value>Answer Type</value>
  </data>
  <data name="AssetCustomForm" xml:space="preserve">
    <value>Asset Custom Form</value>
  </data>
  <data name="CreateCustomForm" xml:space="preserve">
    <value>Create a Custom Form</value>
  </data>
  <data name="CreateForm" xml:space="preserve">
    <value>Create Form</value>
  </data>
  <data name="CreateFormStep2" xml:space="preserve">
    <value>Step 2: Select subsite it belongs to</value>
  </data>
  <data name="CreateFormStep3" xml:space="preserve">
    <value>Step 3: Select Custom Form number, only two custom forms are allowed to one subsite</value>
  </data>
  <data name="CreateFormStep4" xml:space="preserve">
    <value>Step 4: Enter a custom form title, and it will be displayed on the left menu of client site</value>
  </data>
  <data name="CreateFormStep5" xml:space="preserve">
    <value>Step 5: Enter a name and description for your form</value>
  </data>
  <data name="CreateFormStep6" xml:space="preserve">
    <value>Step 6: Enter email address(s) of who will need to receive the form notifications</value>
  </data>
  <data name="CreateFormStep7" xml:space="preserve">
    <value>Step 7: Add Question(s) and select responses + Save</value>
  </data>
  <data name="CustomForm1" xml:space="preserve">
    <value>Custom Form 1</value>
  </data>
  <data name="CustomForm2" xml:space="preserve">
    <value>Custom Form 2</value>
  </data>
  <data name="CustomFormDescription" xml:space="preserve">
    <value>Custom Form Description</value>
  </data>
  <data name="CustomFormName" xml:space="preserve">
    <value>Custom Form Name</value>
  </data>
  <data name="CustomFormNumber" xml:space="preserve">
    <value>Custom Form Number</value>
  </data>
  <data name="CustomFormNumberIncorrect" xml:space="preserve">
    <value>Custom form number is not correct.</value>
  </data>
  <data name="CustomForms" xml:space="preserve">
    <value>Custom Forms</value>
  </data>
  <data name="CustomFormTitle" xml:space="preserve">
    <value>Custom Form Title</value>
  </data>
  <data name="DefaultAnswer" xml:space="preserve">
    <value>Default Answer</value>
  </data>
  <data name="DeleteForm" xml:space="preserve">
    <value>Are you sure you want to delete this Custom form?</value>
  </data>
  <data name="DeleteForms" xml:space="preserve">
    <value>Delete Selected Form(s)</value>
  </data>
  <data name="DelimeterExample" xml:space="preserve">
    <value>delimeter - e.g. 1;2;3</value>
  </data>
  <data name="DescOfCreateForm" xml:space="preserve">
    <value>Fill in general information about this form. Then select “Add &lt;br&gt;Question” to begin assembling your form.</value>
  </data>
  <data name="EditCustomForm" xml:space="preserve">
    <value>Edit Custom Form</value>
  </data>
  <data name="ForAnonymous" xml:space="preserve">
    <value>For Anonymous</value>
  </data>
  <data name="FormIdInvalid" xml:space="preserve">
    <value>Invalid Form Id</value>
  </data>
  <data name="HowToCreateForm" xml:space="preserve">
    <value>How to Create a Custom Form</value>
  </data>
  <data name="Id" xml:space="preserve">
    <value>Id</value>
  </data>
  <data name="ImportantNote" xml:space="preserve">
    <value>IMPORTANT NOTE:</value>
  </data>
  <data name="Mandatory" xml:space="preserve">
    <value>Mandatory?</value>
  </data>
  <data name="Maximum" xml:space="preserve">
    <value>Maximum</value>
  </data>
  <data name="Minimum" xml:space="preserve">
    <value>Minimum</value>
  </data>
  <data name="NoFormCreated" xml:space="preserve">
    <value>No Form created.</value>
  </data>
  <data name="NoQuestionsCreated" xml:space="preserve">
    <value>No questions created.  Please input question and try again.</value>
  </data>
  <data name="NoteDesc" xml:space="preserve">
    <value>If there is a third party Digital Asset Management System involved, please contact your Site Administrator to discuss integration. Development will be quoted.</value>
  </data>
  <data name="NotifyTo" xml:space="preserve">
    <value>Notify To (email)</value>
  </data>
  <data name="NumberOnly" xml:space="preserve">
    <value>Number Only.</value>
  </data>
  <data name="Numeric" xml:space="preserve">
    <value>Numeric?</value>
  </data>
  <data name="OptionalFor" xml:space="preserve">
    <value>Optional For</value>
  </data>
  <data name="OptionalForAnswer" xml:space="preserve">
    <value>Optional For Answer</value>
  </data>
  <data name="Question" xml:space="preserve">
    <value>Question</value>
  </data>
  <data name="SelectCustomFormNumber" xml:space="preserve">
    <value>Please select Custom Form Number.</value>
  </data>
  <data name="SelectCustomFormNumber1" xml:space="preserve">
    <value>Select Custom Form Number</value>
  </data>
  <data name="SelectSubsite" xml:space="preserve">
    <value>Please select subsite.</value>
  </data>
  <data name="Sequence" xml:space="preserve">
    <value>Sequence</value>
  </data>
  <data name="Step1" xml:space="preserve">
    <value>Step 1: Click on Create</value>
  </data>
  <data name="Step2" xml:space="preserve">
    <value>Step 2: Enter a name and description for your custom form</value>
  </data>
  <data name="Step3" xml:space="preserve">
    <value>Step 3: Enter email address(s) of who will need to receive the custom form notifications</value>
  </data>
  <data name="Step4" xml:space="preserve">
    <value>Step 4: Add Question(s) and select responses + Save</value>
  </data>
</root>