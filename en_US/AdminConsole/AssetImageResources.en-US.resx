<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddFile" xml:space="preserve">
    <value>Add file</value>
  </data>
  <data name="AssetCategoryMap" xml:space="preserve">
    <value>Please map this asset and select at least one Category. Your asset has not been saved.</value>
  </data>
  <data name="AssetImage" xml:space="preserve">
    <value>Asset Image</value>
  </data>
  <data name="Change" xml:space="preserve">
    <value>Change</value>
  </data>
  <data name="CreateBulk" xml:space="preserve">
    <value>Create Bulk</value>
  </data>
  <data name="CreateImage" xml:space="preserve">
    <value>Create Image</value>
  </data>
  <data name="DeleteCheckedImages" xml:space="preserve">
    <value>Are you sure you want to delete these checked image(s)?</value>
  </data>
  <data name="DeleteImage" xml:space="preserve">
    <value>Delete Selected Image(s)</value>
  </data>
  <data name="DescOfManageImage" xml:space="preserve">
    <value>Enables you to upload and manage your images. Images that you upload can be viewed on your portal and be used on your templates.</value>
  </data>
  <data name="EditImage" xml:space="preserve">
    <value>Edit Image</value>
  </data>
  <data name="ExpiryDate" xml:space="preserve">
    <value>Expiration Date</value>
  </data>
  <data name="HowToManageImages" xml:space="preserve">
    <value>How to Manage and Upload your images</value>
  </data>
  <data name="Id" xml:space="preserve">
    <value>Id</value>
  </data>
  <data name="ImageInvalid" xml:space="preserve">
    <value>Error: Could not read image</value>
  </data>
  <data name="ImageList" xml:space="preserve">
    <value>Image List</value>
  </data>
  <data name="ImageName" xml:space="preserve">
    <value>Image Name</value>
  </data>
  <data name="ImageUrl" xml:space="preserve">
    <value>Image URL</value>
  </data>
  <data name="ImportantNote" xml:space="preserve">
    <value>IMPORTANT NOTE:</value>
  </data>
  <data name="ManageImages" xml:space="preserve">
    <value>Upload and Manage your images</value>
  </data>
  <data name="MaximumUpload" xml:space="preserve">
    <value>You have exceeded the maximum upload limit of 50MB per batch upload. Please reduce your image sizes and try again.</value>
  </data>
  <data name="NoteDesc" xml:space="preserve">
    <value>If there is a third party Digital Asset Management System involved, please contact your Site Administrator to discuss integration. Development will be quoted.</value>
  </data>
  <data name="OriginalImageFile" xml:space="preserve">
    <value>Original Image File</value>
  </data>
  <data name="Remove" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="Selectfile" xml:space="preserve">
    <value>Select file</value>
  </data>
  <data name="Step1" xml:space="preserve">
    <value>Step 1: Click on Upload</value>
  </data>
  <data name="Step2" xml:space="preserve">
    <value>Step 2: Select an expiration date if applicable</value>
  </data>
  <data name="Step3" xml:space="preserve">
    <value>Step 3: Enter image Name</value>
  </data>
  <data name="Step4" xml:space="preserve">
    <value>Step 4: Upload image file</value>
  </data>
  <data name="Step5" xml:space="preserve">
    <value>Step 5: Add additional files to upload if applicable by clicking on “+ Add File”</value>
  </data>
  <data name="Step6" xml:space="preserve">
    <value>Step 6: Select the category of where you want to save the image(s)</value>
  </data>
  <data name="Step7" xml:space="preserve">
    <value>Step 7: Click on Upload</value>
  </data>
  <data name="SureDeleteImage" xml:space="preserve">
    <value>Are you sure to delete this image?</value>
  </data>
  <data name="Thumbnail" xml:space="preserve">
    <value>Thumbnail</value>
  </data>
  <data name="TotalNumber" xml:space="preserve">
    <value>Total Number:</value>
  </data>
  <data name="UploadImages" xml:space="preserve">
    <value>Upload Images</value>
  </data>
</root>