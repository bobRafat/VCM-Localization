<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AvailableDates" xml:space="preserve">
    <value>利用可能日時</value>
  </data>
  <data name="Border" xml:space="preserve">
    <value>罫線</value>
  </data>
  <data name="CheckItemsToSubmit" xml:space="preserve">
    <value>送信する内容をご確認ください。</value>
  </data>
  <data name="EnterEmailSubject" xml:space="preserve">
    <value>メールの件名を入力してください。</value>
  </data>
  <data name="EnterEmailSubject1" xml:space="preserve">
    <value>メールの件名を入力</value>
  </data>
  <data name="ForReviewAndApproval" xml:space="preserve">
    <value>あなたのレビューと承認のための系統広告を提出した。</value>
  </data>
  <data name="FullColour" xml:space="preserve">
    <value>フルカラー</value>
  </data>
  <data name="GoToHistory" xml:space="preserve">
    <value>歴史に行く</value>
  </data>
  <data name="GoToList" xml:space="preserve">
    <value>一覧へ</value>
  </data>
  <data name="HasAcceptedLineage" xml:space="preserve">
    <value>受け入れ系統を持って</value>
  </data>
  <data name="HasRejectedLineage" xml:space="preserve">
    <value>拒否された系統を持って</value>
  </data>
  <data name="Headline" xml:space="preserve">
    <value>見出し</value>
  </data>
  <data name="InsertionDate" xml:space="preserve">
    <value>挿入日</value>
  </data>
  <data name="InvalidCopy" xml:space="preserve">
    <value>無効なコピー</value>
  </data>
  <data name="InvalidDate" xml:space="preserve">
    <value>無効な日付</value>
  </data>
  <data name="InvalidHeadline" xml:space="preserve">
    <value>無効なヘッドライン</value>
  </data>
  <data name="InvalidSuburbSelected" xml:space="preserve">
    <value>無効な郊外に選択</value>
  </data>
  <data name="LinageEdit" xml:space="preserve">
    <value>LINAGE - 編集</value>
  </data>
  <data name="LineageCreate" xml:space="preserve">
    <value>リネージュ - 作成</value>
  </data>
  <data name="LineageHasBeenAccepted" xml:space="preserve">
    <value>リネージュは受け入れられてきた</value>
  </data>
  <data name="LineageHasBeenRejected" xml:space="preserve">
    <value>あなたの系譜は拒否されました</value>
  </data>
  <data name="LineageHasBeenSubmitted" xml:space="preserve">
    <value>リネージュの広告が送信されました</value>
  </data>
  <data name="LineageList" xml:space="preserve">
    <value>リネージュ一覧</value>
  </data>
  <data name="LineageListAdmin" xml:space="preserve">
    <value>リネージュ一覧 - 管理</value>
  </data>
  <data name="LineageListAdminHistory" xml:space="preserve">
    <value>リネージュリスト - 管理者（歴史）</value>
  </data>
  <data name="LineageListSupplier" xml:space="preserve">
    <value>リネージュリスト - サプライヤー</value>
  </data>
  <data name="ListAdmin" xml:space="preserve">
    <value>ListAdmin</value>
  </data>
  <data name="ListSupplier" xml:space="preserve">
    <value>ListSupplier</value>
  </data>
  <data name="Logo1" xml:space="preserve">
    <value>ロゴ×1</value>
  </data>
  <data name="Logo2" xml:space="preserve">
    <value>ロゴ×2</value>
  </data>
  <data name="LogoLC9790" xml:space="preserve">
    <value>ロゴLC9790</value>
  </data>
  <data name="LogoTC9790" xml:space="preserve">
    <value>ロゴTC9790</value>
  </data>
  <data name="NoItemsAvailable" xml:space="preserve">
    <value>利用可能なアイテムはありません</value>
  </data>
  <data name="NoItemsSelected" xml:space="preserve">
    <value>選択したアイテムはありません</value>
  </data>
  <data name="NoPublicationsAvailable" xml:space="preserve">
    <value>利用できません出版物</value>
  </data>
  <data name="OnlyNumaricsAllowed" xml:space="preserve">
    <value>唯一Numaricsが許可</value>
  </data>
  <data name="PropertyAddress" xml:space="preserve">
    <value>物件アドレス</value>
  </data>
  <data name="PropertyDescription" xml:space="preserve">
    <value>プロパティ説明</value>
  </data>
  <data name="PropertySearch" xml:space="preserve">
    <value>物件検索</value>
  </data>
  <data name="PropertySuburb" xml:space="preserve">
    <value>プロパティ郊外</value>
  </data>
  <data name="RejectedLineage" xml:space="preserve">
    <value>あなたの系譜を拒否しました</value>
  </data>
  <data name="SureToApproveSelectedItems" xml:space="preserve">
    <value>あなたが選択したすべての項目を承認してもよろしいですか？</value>
  </data>
  <data name="SureToDeleteLineage" xml:space="preserve">
    <value>あなたはこの系統を削除してもよろしいですか？</value>
  </data>
  <data name="SureToDeleteSelectedItems" xml:space="preserve">
    <value>あなたが選択したすべての項目を削除してもよろしいですか？</value>
  </data>
  <data name="SureToRejectAllSelectedItems" xml:space="preserve">
    <value>あなたが選択したすべての項目を拒否するか？</value>
  </data>
  <data name="SureToSubmitSelectedItems" xml:space="preserve">
    <value>あなたが選択したすべての項目を提出してもよろしいですか？</value>
  </data>
  <data name="TwoDecimalPlacesAllowed" xml:space="preserve">
    <value>二つの小数点以下の桁のみが許可された</value>
  </data>
  <data name="ViewLineageList" xml:space="preserve">
    <value>これらの系統の一覧を表示してください</value>
  </data>
  <data name="ViewLineageList1" xml:space="preserve">
    <value>あなたの系譜の一覧を表示する</value>
  </data>
  <data name="YouHaveItemsInList" xml:space="preserve">
    <value>あなたは、リスト内の{0}アイテムを持っている</value>
  </data>
</root>