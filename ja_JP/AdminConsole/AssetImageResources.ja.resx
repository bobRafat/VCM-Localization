<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddFile" xml:space="preserve">
    <value>ファイルを追加</value>
  </data>
  <data name="AssetCategoryMap" xml:space="preserve">
    <value>アセットがまだ保存されていません。カテゴリを一つ選択してください。</value>
  </data>
  <data name="AssetImage" xml:space="preserve">
    <value>画像</value>
  </data>
  <data name="Change" xml:space="preserve">
    <value>変更</value>
  </data>
  <data name="CreateBulk" xml:space="preserve">
    <value>バッチを作成</value>
  </data>
  <data name="CreateImage" xml:space="preserve">
    <value>画像を作成</value>
  </data>
  <data name="DeleteCheckedImages" xml:space="preserve">
    <value>確認済み画像を削除してもよろしいですか？</value>
  </data>
  <data name="DeleteImage" xml:space="preserve">
    <value>選択した画像を削除</value>
  </data>
  <data name="DescOfManageImage" xml:space="preserve">
    <value>アップロードした画像を管理します。アップロードされた画像がポータル上で閲覧し、テンプレートに追加することができます。</value>
  </data>
  <data name="EditImage" xml:space="preserve">
    <value>画像を編集</value>
  </data>
  <data name="ExpiryDate" xml:space="preserve">
    <value>有効期限</value>
  </data>
  <data name="HowToManageImages" xml:space="preserve">
    <value>画像の管理・アップロード方法</value>
  </data>
  <data name="Id" xml:space="preserve">
    <value>ID</value>
  </data>
  <data name="ImageInvalid" xml:space="preserve">
    <value>エラー：画像を読み取れませんでした。</value>
  </data>
  <data name="ImageList" xml:space="preserve">
    <value>画像一覧</value>
  </data>
  <data name="ImageName" xml:space="preserve">
    <value>画像名</value>
  </data>
  <data name="ImageUrl" xml:space="preserve">
    <value>画像のURL</value>
  </data>
  <data name="ImportantNote" xml:space="preserve">
    <value>注意事項：</value>
  </data>
  <data name="ManageImages" xml:space="preserve">
    <value>アップロードした画像を管理する</value>
  </data>
  <data name="MaximumUpload" xml:space="preserve">
    <value>バッチアップロードの最大容量の50MBを超えました。容量を減らし、もう一度試してください。</value>
  </data>
  <data name="NoteDesc" xml:space="preserve">
    <value>第三者のデジタル資産管理システムとのインテグ方法については、システム管理者にご連絡ください。</value>
  </data>
  <data name="OriginalImageFile" xml:space="preserve">
    <value>オリジナルファイル</value>
  </data>
  <data name="Remove" xml:space="preserve">
    <value>削除</value>
  </data>
  <data name="Selectfile" xml:space="preserve">
    <value>ファイルを選択</value>
  </data>
  <data name="Step1" xml:space="preserve">
    <value>ステップ1：「アップロード」ボタンをクリックします。</value>
  </data>
  <data name="Step2" xml:space="preserve">
    <value>ステップ2：有効期限がある場合、日付けを選択します。</value>
  </data>
  <data name="Step3" xml:space="preserve">
    <value>ステップ3：画像名を入力します。</value>
  </data>
  <data name="Step4" xml:space="preserve">
    <value>ステップ4：画像ファイルをアップロードします。</value>
  </data>
  <data name="Step5" xml:space="preserve">
    <value>ステップ5：「+ファイルを追加」をクリックして複数ファイルを同時にアップロードすることもできます。</value>
  </data>
  <data name="Step6" xml:space="preserve">
    <value>ステップ6：保存先のカテゴリを選択します。</value>
  </data>
  <data name="Step7" xml:space="preserve">
    <value>ステップ7：アップロードをクリックします。</value>
  </data>
  <data name="SureDeleteImage" xml:space="preserve">
    <value>画像を削除してもよろしいですか？</value>
  </data>
  <data name="Thumbnail" xml:space="preserve">
    <value>サムネイル</value>
  </data>
  <data name="TotalNumber" xml:space="preserve">
    <value>総数：</value>
  </data>
  <data name="UploadImages" xml:space="preserve">
    <value>画像をアップロード</value>
  </data>
</root>